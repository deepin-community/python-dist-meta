Source: python-dist-meta
Section: python
Priority: optional
Maintainer: Debian Python Team <team+python@tracker.debian.org>
Uploaders: Josenilson Ferreira da Silva <nilsonfsilva@hotmail.com>
Rules-Requires-Root: no
Build-Depends: debhelper-compat (= 13),
               dh-python,
               pybuild-plugin-pyproject,
               python3-all,
               python3-apeye,
               python3-atomicwrites,
               python3-coincidence,
               python3-colorama,
               python3-consolekit,
               python3-first,
               python3-coverage,
               python3-domdf-python-tools,
               python3-flake8,
               python3-handy-archives,
               python3-importlib-metadata,
               python3-packaging,
               python3-pytest,
               python3-pytest-cov,
               python3-pytest-datadir,
               python3-pytest-regressions,
               python3-pytest-rerunfailures,
               python3-pytest-timeout,
               python3-setuptools,
               python3-shippinglabel,
               python3-sphinx
Standards-Version: 4.6.2
Homepage: https://github.com/repo-helper/dist-meta
Vcs-Browser: https://salsa.debian.org/python-team/packages/python-dist-meta
Vcs-Git: https://salsa.debian.org/python-team/packages/python-dist-meta.git
Testsuite: autopkgtest-pkg-pybuild

Package: python3-dist-meta
Architecture: all
Depends: ${misc:Depends},
         ${python3:Depends}
Description: Parse and create Python distribution metadata
 dist-meta and is a set of support tools for managing metadata of a GitHub
 repository. This library provides a convenient way to automatically generate
 and update metadata files such as README files, license files, changelog
 files, and more.
 .
 The main purpose of dist-meta is to ease the process of maintaining these
 files in projects hosted on GitHub by providing a command line interface
 (CLI) to automatically generate and update the necessary metadata files. It
 is especially useful for projects that follow specific standards or formatting
 guidelines for their metadata files.
 .
 you can automate tasks like:
  - Automatically generate and update your project's README file based on a
    predefined or custom template.
  - Generate license files, such as the LICENSE file, from a pool of available
    licenses.
  - Create changelog files based on changes made to your repository.
  - Verify that your project's metadata files are up to date according to
    defined best practices.
